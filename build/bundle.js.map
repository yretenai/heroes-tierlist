{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/component/HeroCard.svelte","../../src/component/HeroIcon.svelte","../../src/component/TierRow.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.44.3' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script lang=\"ts\">\n    export let hero: HeroData;\n    export let locked: boolean = false;\n</script>\n\n<div draggable={!(locked === true || hero.masked === true)} class=\"card{hero.masked === true ? ' masked' : ''}{locked === true ? ' locked' : ''}\" style=\"--icon: url({hero.circleIcon})\" data-id={hero.id}>\n    <div class=\"backdrop\">\n        <img src={hero.cardPortrait} alt={hero.name} />\n    </div>\n    <div class=\"text\">\n        <h1>{hero.name}</h1>\n        <h3>{hero.title}</h3>\n    </div>\n</div>\n","<script lang=\"ts\">\n    export let hero: HeroData;\n    export let locked: boolean = false;\n\n    function mutateDrag(event: DragEvent) {\n        event.dataTransfer.setData(\"id\", hero.id.toString(10));\n    }\n</script>\n\n<div draggable={!(locked === true || hero.masked === true)} class=\"icon{hero.masked === true ? ' masked' : ''}{locked === true ? ' locked' : ''}\" style=\"--icon: url({hero.circleIcon})\" on:dragstart={mutateDrag}>\n    <div class=\"image\" />\n</div>\n\n<style>\n    .icon {\n        background: linear-gradient(180deg, #000933 0, #141f52);\n        border-radius: 50%;\n        box-shadow: 0 0 6px 1px rgba(0, 0, 0, 0.6);\n        box-sizing: content-box;\n        display: inline-block;\n        position: relative;\n        margin: 4px;\n        transition: opacity 0.2s, filter 0.2s;\n        cursor: pointer;\n        opacity: 0.9;\n        filter: grayscale(0%);\n    }\n\n    .icon.locked,\n    .icon.masked {\n        cursor: default;\n    }\n\n    .icon,\n    .image,\n    .image::before {\n        height: 75px;\n        width: 75px;\n    }\n\n    .icon.masked {\n        opacity: 0.3;\n        filter: grayscale(100%);\n    }\n\n    .icon::after {\n        content: \" \";\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        border-radius: 50%;\n        border: 2px solid rgba(51, 153, 255, 0.4);\n        display: block;\n        background-image: none;\n        box-shadow: inset 0 0 10px 2px rgba(0, 0, 0, 0.8);\n        transition: border-color 0.2s, background-color 0.2s, box-shadow 0.2s;\n    }\n\n    .icon:hover:not(.masked):not(.locked)::after {\n        background-color: rgba(0, 128, 255, 0.1);\n        background-image: linear-gradient(0deg, rgba(71, 153, 235, 0.6) 0, rgba(71, 153, 235, 0) 40%);\n        box-shadow: inset 0 0 10px 2px rgba(0, 128, 255, 0.5);\n        border-color: rgba(51, 128, 204, 0.8);\n    }\n\n    .image {\n        overflow: hidden;\n        opacity: 0.9;\n        display: flex;\n        -webkit-box-pack: center;\n        -ms-flex-pack: center;\n        justify-content: center;\n        -webkit-box-align: center;\n        -ms-flex-align: center;\n        align-items: center;\n        position: relative;\n        border-radius: 50%;\n    }\n\n    .image::before {\n        content: \"\";\n        background: var(--icon) no-repeat;\n        background-size: contain;\n        transition: transform 0.2s;\n    }\n\n    .icon:hover:not(.masked):not(.locked) .image::before {\n        transform: scale(1.05) perspective(1px);\n    }\n\n    @media (prefers-reduced-motion) {\n        .icon:hover:not(.masked):not(.locked) .image::before {\n            transform: none;\n        }\n    }\n\n    @media (max-width: 1000px) {\n        .icon,\n        .image,\n        .image::before {\n            height: 50px;\n            width: 50px;\n        }\n    }\n</style>\n","<script lang=\"ts\">\n    import HeroCard from \"./HeroCard.svelte\";\n    import HeroIcon from \"./HeroIcon.svelte\";\n    import { createEventDispatcher } from \"svelte\";\n\n    export let tier: Tier;\n    export let locked: boolean;\n    export let mobile: boolean;\n    export let icon: boolean;\n    export let heroData: HeroData[];\n\n    $: {\n        heroData = heroData.filter((hero) => {\n            if (hero.tier == tier.id) {\n                return true;\n            }\n\n            if (hero.tier === tier.altTier) {\n                return true;\n            }\n\n            return false;\n        });\n        heroData.sort((a: HeroData, b: HeroData) => {\n            const name1 = a.name.toUpperCase();\n            const name2 = b.name.toUpperCase();\n            if (name1 < name2) {\n                return -1;\n            }\n            if (name1 > name2) {\n                return 1;\n            }\n            return 0;\n        });\n        heroData.sort((a: HeroData, b: HeroData) => {\n            if (a.role < b.role) {\n                return -1;\n            }\n            if (a.role > b.role) {\n                return 1;\n            }\n            return 0;\n        });\n        heroData = heroData;\n    }\n\n    const dispatch = createEventDispatcher<{ moveHero: MoveHeroEvent }>();\n\n    function doDrop(event: DragEvent) {\n        event.preventDefault();\n        const data = event.dataTransfer.getData(\"id\");\n        const heroId = Number.parseInt(data, 10);\n        dispatch(\"moveHero\", {\n            heroId: heroId,\n            tierListId: tier.id,\n        });\n    }\n\n    function allowDrop(event: DragEvent) {\n        event.preventDefault();\n    }\n</script>\n\n<div class=\"tier\" style=\"--color: {tier.color}\">\n    <div class=\"name\">{tier.label}</div>\n    <div class=\"list\" on:drop={doDrop} on:dragover={allowDrop}>\n        {#each heroData as hero (hero.id)}\n            {#if icon}\n                <HeroIcon {hero} locked={mobile || locked} />\n            {:else}\n                <HeroCard {hero} locked={mobile || locked} />\n            {/if}\n        {/each}\n    </div>\n</div>\n\n<style>\n    .tier {\n        min-height: 83px;\n        display: flex;\n        flex-direction: row;\n        font-size: 25px;\n        align-items: stretch;\n    }\n\n    .tier .name {\n        display: block;\n        min-width: 150px;\n        max-width: 150px;\n        line-height: 83px;\n        padding: 0 15px;\n        text-align: right;\n        background: var(--color);\n        opacity: 0.9;\n        box-shadow: -7px 0 13px rgba(0, 0, 0, 0.4);\n        border: 2px solid rgba(51, 153, 255, 0.4);\n    }\n\n    .tier .list {\n        box-shadow: 7 0 13px rgba(0, 0, 0, 0.4);\n        border: 2px solid rgba(51, 153, 255, 0.4);\n        width: 100%;\n    }\n\n    @media (max-width: 1000px) {\n        .tier {\n            min-height: 70px;\n            display: flex;\n            flex-direction: row;\n            font-size: 14px;\n            align-items: stretch;\n        }\n\n        .tier .name {\n            min-width: 75px;\n            max-width: 75px;\n            line-height: 70px;\n            padding: 0 5px;\n        }\n    }\n</style>\n","<script lang=\"ts\">\n\timport TierRow from \"./component/TierRow.svelte\";\n\timport { onMount } from \"svelte\";\n\n\texport let heroData: HeroData[];\n\n\tlet icon: boolean = true;\n\tlet locked: boolean = false;\n\n\tlet mobile: boolean = false;\n\tconst ua = navigator.userAgent.toLowerCase();\n\tif (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(ua) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(ua.substring(0, 4))) {\n\t\tmobile = true;\n\t}\n\n\tlet search: string = \"\";\n\n\tlet roleFilter: number = -1;\n\n\tlet tiers: Tier[] = [\n\t\t{ label: \"SSS\", color: \"purple\", id: 6, altTier: undefined },\n\t\t{ label: \"S\", color: \"purple\", id: 5, altTier: undefined },\n\t\t{ label: \"A\", color: \"purple\", id: 4, altTier: undefined },\n\t\t{ label: \"B\", color: \"purple\", id: 3, altTier: 6 },\n\t\t{ label: \"C\", color: \"purple\", id: 2, altTier: undefined },\n\t\t{ label: \"D\", color: \"purple\", id: 1, altTier: undefined },\n\t\t{ label: \"F\", color: \"purple\", id: 0, altTier: undefined },\n\t\t{ label: \"Unsorted\", color: \"purple\", id: -1, altTier: undefined },\n\t];\n\n\t$: filteredHeroData = heroData.map((hero) => {\n\t\thero.masked = search.length > 0 && `${hero.name} ${hero.search}`.toUpperCase().indexOf(search.toUpperCase()) == -1;\n\t\tif (!hero.masked && roleFilter > -1) {\n\t\t\thero.masked = hero.role != roleFilter;\n\t\t}\n\t\tif (hero.tier === undefined || hero.tier >= tiers.length || hero.tier < -1) {\n\t\t\thero.tier = -1;\n\t\t}\n\t\treturn hero;\n\t});\n\n\tfunction encodeTiers() {\n\t\tif (!heroData.some((hero) => hero.tier > -1)) {\n\t\t\tlocation.hash = \"\";\n\t\t\treturn;\n\t\t}\n\n\t\tlet buckets: Array<Array<number>> = [];\n\t\tfor (let i = 0; i < tiers.length - 1; ++i) {\n\t\t\tbuckets.push([]);\n\t\t}\n\n\t\tfor (let hero of heroData) {\n\t\t\tif (hero.tier > -1) {\n\t\t\t\tbuckets[hero.tier].push(hero.id);\n\t\t\t}\n\t\t}\n\n\t\t// WARN: If hero id ever goes over 255, this breaks. Right now it's at 90. I strongly doubt it'll ever go over that.\n\t\t// version Byte + bucket counts + entries + isLocked\n\t\tlet array = new Uint8Array(1 + buckets.length + buckets.reduce((current, bucket) => current + bucket.length, 0) + 1);\n\t\tlet byteIndex = 0;\n\t\tarray[byteIndex++] = 2;\n\t\tfor (let i = 0; i < buckets.length; ++i) {\n\t\t\tarray[byteIndex++] = buckets[i].length;\n\n\t\t\tfor (let heroId of buckets[i]) {\n\t\t\t\tarray[byteIndex++] = heroId;\n\t\t\t}\n\t\t}\n\t\tarray[byteIndex++] = locked ? 1 : 0;\n\n\t\tlocation.hash = `#${btoa(String.fromCharCode.apply(null, array))}`;\n\t}\n\n\tonMount(() => {\n\t\tif (location.hash.length < 2) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst array = new Uint8Array(\n\t\t\tatob(location.hash.substring(1))\n\t\t\t\t.split(\"\")\n\t\t\t\t.map(function (c) {\n\t\t\t\t\treturn c.charCodeAt(0);\n\t\t\t\t})\n\t\t);\n\t\tlet byteIndex = 0;\n\n\t\tlet version = array[byteIndex++];\n\n\t\tlet heroIdToTier = {};\n\t\tif (version >= 1) {\n\t\t\tfor (let i = 0; i < tiers.length - 1; ++i) {\n\t\t\t\tconst count = array[byteIndex++];\n\n\t\t\t\tfor (let j = 0; j < count; ++j) {\n\t\t\t\t\theroIdToTier[array[byteIndex++]] = i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (version >= 2) {\n\t\t\tlocked = array[byteIndex++] == 1;\n\t\t}\n\n\t\theroData = heroData.map((hero) => {\n\t\t\tif (hero.id in heroIdToTier) {\n\t\t\t\thero.tier = heroIdToTier[hero.id];\n\t\t\t}\n\t\t\treturn hero;\n\t\t});\n\t});\n\n\tfunction moveHero(event: CustomEvent<MoveHeroEvent>) {\n\t\theroData = heroData.map((hero) => {\n\t\t\tif (hero.id == event.detail.heroId) {\n\t\t\t\thero.tier = event.detail.tierListId;\n\t\t\t}\n\t\t\treturn hero;\n\t\t});\n\n\t\tencodeTiers();\n\t}\n\n\tfunction hasTier(tier: Tier) {\n\t\tif (tier.id == -1 && locked) {\n\t\t\treturn false;\n\t\t}\n\t\treturn heroData.some((hero) => hero.tier == tier.id || hero.tier == tier.altTier);\n\t}\n</script>\n\n<main>\n\t<nav>\n\t\t<div class=\"block name\">\n\t\t\t<h1>Heroes of the Storm Tier List</h1>\n\t\t\t<h3>\n\t\t\t\tNot affiliated, endorsed or authorized by Blizzard Entertainment, inc.<br />\n\t\t\t\tHeroes of the Storm is &copy;2021 Blizzard Entertainment, inc. ALL RIGHTS RESERVED.\n\t\t\t</h3>\n\t\t</div>\n\t\t<div class=\"block filters\">\n\t\t\t<div class=\"search\">\n\t\t\t\t<input type=\"text\" placeholder=\"Search\" bind:value={search} />\n\t\t\t</div>\n\t\t\t<div class=\"roles\">\n\t\t\t\t<div class=\"role{roleFilter == -1 ? ' active' : ''}\">\n\t\t\t\t\t<label class=\"icon\">\n\t\t\t\t\t\t<input type=\"radio\" bind:group={roleFilter} value=\"-1\" />\n\t\t\t\t\t\t<svg viewBox=\"-10 -15 240 240\" width=\"40\" height=\"40\"><rect x=\"143.6\" y=\"143.6\" width=\"49.77\" height=\"49.77\" /><rect x=\"83.12\" y=\"143.6\" width=\"49.77\" height=\"49.77\" /><rect x=\"22.64\" y=\"143.6\" width=\"49.77\" height=\"49.77\" /><rect x=\"143.6\" y=\"83.12\" width=\"49.77\" height=\"49.77\" /><rect x=\"83.12\" y=\"83.12\" width=\"49.77\" height=\"49.77\" /><rect x=\"22.64\" y=\"83.12\" width=\"49.77\" height=\"49.77\" /><rect x=\"143.6\" y=\"22.64\" width=\"49.77\" height=\"49.77\" /><rect x=\"83.12\" y=\"22.64\" width=\"49.77\" height=\"49.77\" /><rect x=\"22.64\" y=\"22.64\" width=\"49.77\" height=\"49.77\" /></svg>\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"role{roleFilter == 0 ? ' active' : ''}\">\n\t\t\t\t\t<label class=\"icon\">\n\t\t\t\t\t\t<input type=\"radio\" bind:group={roleFilter} value=\"0\" />\n\t\t\t\t\t\t<svg viewBox=\"0 0 210 210\" width=\"40\" height=\"40\"><path d=\"M108,202.08S37,163,40.42,68.7l9.78-7V30.46a69.52,69.52,0,0,0,30.28,0C96.9,26.73,108,14.13,108,14.13s11,12.6,27.43,16.33a69.26,69.26,0,0,0,30.22,0V61.7l9.76,7C178.83,163,108,202.08,108,202.08ZM166.07,74.76l-8.83-7v-27a82.1,82.1,0,0,1-24.64-1.87C119.47,35.76,108,26.26,108,26.26s-11.53,9.5-24.69,12.59a82.36,82.36,0,0,1-24.68,1.87v27l-8.85,7S47,149.43,108,190C168.85,149.43,166.07,74.76,166.07,74.76Zm-33,24.72c0-6.88,3.26-9.33,3.26-9.33l16.24-16.29,5.61,4.63c.34,33.27-12.38,59-25.11,76.43Zm2.33-12.59a16.81,16.81,0,0,0-5.12,12.59v59.13C118.72,173.37,108,181.09,108,181.09s-10.78-7.72-22.36-22.48V99.48a16.81,16.81,0,0,0-5.12-12.59C76.23,83,68.93,75.49,65.54,72l0,0V47.71S89.18,50.29,108,34.65c18.75,15.64,42.31,13.06,42.31,13.06V72l0,0C146.92,75.49,139.63,83,135.39,86.89ZM82.81,99.48v55.44c-12.75-17.39-25.5-43.16-25.16-76.43l5.62-4.63L79.55,90.15S82.81,92.6,82.81,99.48Z\" /></svg>\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"role{roleFilter == 1 ? ' active' : ''}\">\n\t\t\t\t\t<label class=\"icon\">\n\t\t\t\t\t\t<input type=\"radio\" bind:group={roleFilter} value=\"1\" />\n\t\t\t\t\t\t<svg viewBox=\"0 0 210 210\" width=\"40\" height=\"40\"><path d=\"M163.12,143.75l-4.92-13.33s-10.43-4.12-20.66-6.91c0,0,3.34-7.05,5.41-12.34,0,0,11.14,2.75,13.78,4A109.66,109.66,0,0,0,159.19,87S140.56,70.7,103,70.7,47.53,87,47.53,87s.37,13.26,2,21.22l3-1a176.92,176.92,0,0,0,2.83,17.56L49,127.08,43.6,143.26s-16.4-40-9.35-112c0,0,7.87,19.81,20.17,32.08,0,0,6.78-4.18,23.12-6.91L103.11,5.06l25.58,51.33a113.66,113.66,0,0,1,24.1,6.91,127.06,127.06,0,0,0,19.68-32.08S179.65,92.24,163.12,143.75Zm-96-43.19-.48-9s5.84-5.36,9.5-5.7,9,2.38,9,2.38a129.5,129.5,0,0,1,0,14.25L74.28,99.61Zm72.19-10.45c2.92.27,7.57,7.11,8.08,20l-6.65-2.38s-4,14.87-8.55,15.68-10.93-1.42-10.93-1.42a169.81,169.81,0,0,0,10.45-29S136.43,89.83,139.35,90.11Zm-18.52-4.76c2.73.43,7.6,5.71,7.6,5.71s-5.65,20.5-9,26.6c-2.79,5-12.05,1.41-14.25.48,0,0,4.44-18.24,6.18-29.93C111.33,88.21,117.57,84.85,120.83,85.35ZM98.5,83.45c3.53-.06,8.55,3.81,8.55,3.81a103.28,103.28,0,0,1-2.85,17.57S95,105,89,103.41c0,0,.36-8,0-14.73C89,88.68,95,83.52,98.5,83.45ZM72.62,103.77c3.53.23,13.42,3.32,20.66,4a82.53,82.53,0,0,0,9.76.49s.64,6.6-5.34,13.33c0,0-6.19,3.82-15.74,3s-15.24-8.88-15.24-8.88S71.83,126.34,77,127.46s17.36-.56,21.15.5,8.81,4.31,22.14,20.73c0,0-5-8.86-10-15.83a61.54,61.54,0,0,0-7.13-8.07,211.84,211.84,0,0,1,21.38,2.37c9.86,1.68,19.66,4.58,20.9,5.23,0,0-1.9,16.15-3.33,19s-8.1,9.14-8.1,9.14v9.87A179.28,179.28,0,0,1,108,185.7a167.69,167.69,0,0,1-26.56-15.3V162l-10.33-5.92s-1.7-.37-3.44-4S58,133.86,55.89,106.24C55.89,106.24,69.08,103.54,72.62,103.77Zm7.84,78a27.64,27.64,0,0,0,1-8.45C93,181.49,108,188.15,108,188.15c10.41-4.7,26.07-14.8,26.07-14.8a29.86,29.86,0,0,0,1.45,8,19.18,19.18,0,0,0,3.8,6.17C129.22,195.94,108,208.41,108,208.41c-13.51-7.23-31.37-20.91-31.37-20.91A13.46,13.46,0,0,0,80.46,181.8Z\" /></svg>\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"role{roleFilter == 2 ? ' active' : ''}\">\n\t\t\t\t\t<label class=\"icon\">\n\t\t\t\t\t\t<input type=\"radio\" bind:group={roleFilter} value=\"2\" />\n\t\t\t\t\t\t<svg viewBox=\"0 0 210 210\" width=\"40\" height=\"40\"><path d=\"M203.13,27.23,184.78,65.86s.25,32.68-16.43,54l3.88,22.81L151.54,135a109.08,109.08,0,0,1-31,13.92V132.48s21.71-2.58,37.18-24.62,11.59-47.32,11.59-47.32ZM123,53.37,136,40.25V58L123,71.07v5l8.27-8.29V83L113.8,100.63v69.05c14.89,0,20.21-5.79,20.21-5.79L108,209.2v0l0,0v-.05L81.92,163.87s5.34,5.79,20.29,5.79V100.58L84.73,83V67.69L93,76V71L79.9,57.88V40.17L93,53.3V48.47l-18-18.11V12.65L108,45.58v.23l0-.16,32.81-32.91v17.7L123,48.55ZM95.44,148.9a109.08,109.08,0,0,1-31-13.92l-20.69,7.64,3.88-22.81C31,98.54,31.22,65.86,31.22,65.86L12.87,27.23l33.8,33.31s-3.88,25.28,11.59,47.32,37.18,24.62,37.18,24.62Z\" /></svg>\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"role{roleFilter == 3 ? ' active' : ''}\">\n\t\t\t\t\t<label class=\"icon\">\n\t\t\t\t\t\t<input type=\"radio\" bind:group={roleFilter} value=\"3\" />\n\t\t\t\t\t\t<svg viewBox=\"0 0 210 210\" width=\"40\" height=\"40\"><path d=\"M111,202.5c15-10,29.22-31.43,32-41-9,0-14-13-14-22v-47l-18,16Z\" /><path d=\"M105,202.5c-15-10-29.22-31.43-32-41,9,0,14-13,14-22v-47l18,16Z\" /><path d=\"M150.28,37.44C150.28,55.28,135,67.5,126.5,73c-4.82,3.09-11.23,5.45-11.23-1.82V40.5c0-9.74,7.26-9,7.26-9,0-9.74-14.53-18-14.53-18s-14.53,8.26-14.53,18c0,0,7.26-.74,7.26,9V71.13c0,7.27-6.41,4.91-11.23,1.82C81,67.5,65.72,55.28,65.72,37.44,53.83,59.24,82.4,81.7,108,103.5,133.6,81.7,162.17,59.24,150.28,37.44Z\" /></svg>\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"role{roleFilter == 4 ? ' active' : ''}\">\n\t\t\t\t\t<label class=\"icon\">\n\t\t\t\t\t\t<input type=\"radio\" bind:group={roleFilter} value=\"4\" />\n\t\t\t\t\t\t<svg viewBox=\"0 0 210 210\" width=\"40\" height=\"40\"><path d=\"M171.77,132.69H132.69v39.08c0,3.41-4.82,8.23-8.23,8.23H91.54c-3.41,0-8.23-4.82-8.23-8.23V132.69H44.23c-3.41,0-8.23-4.82-8.23-8.23V91.54c0-3.41,4.82-8.23,8.23-8.23H83.31V44.23c0-3.41,4.82-8.23,8.23-8.23h32.92c3.41,0,8.23,4.82,8.23,8.23V83.31h39.08c3.41,0,8.23,4.82,8.23,8.23v32.92C180,127.87,175.18,132.69,171.77,132.69Z\" /></svg>\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"role{roleFilter == 5 ? ' active' : ''}\">\n\t\t\t\t\t<label class=\"icon\">\n\t\t\t\t\t\t<input type=\"radio\" bind:group={roleFilter} value=\"5\" />\n\t\t\t\t\t\t<svg viewBox=\"0 0 210 210\" width=\"40\" height=\"40\"><path d=\"M204.4,106.09,177.2,128A76.41,76.41,0,0,0,181,106.09c0-11.16-3.81-22.41-3.81-22.41Zm-52,0A44.38,44.38,0,1,1,108,61.73,44.37,44.37,0,0,1,152.38,106.09ZM125.66,170.5v6.66c0,7.63,6.2,9.06,6.2,9.06a81.83,81.83,0,0,1-10,9.54A118.65,118.65,0,0,1,108,204.83h0a118.65,118.65,0,0,1-13.84-9.07,81.83,81.83,0,0,1-10-9.54s6.2-1.43,6.2-9.06V170.5a66.79,66.79,0,0,1-.47-128.69V31.69s-.11-6.76-6.21-7.63l20.52-12.4v44a50.59,50.59,0,1,0,7.64,0v-44l20.52,12.4c-6.1.87-6.21,7.63-6.21,7.63V41.81a66.79,66.79,0,0,1-.47,128.69ZM11.6,106.09,38.8,83.68S35,94.93,35,106.09A76.41,76.41,0,0,0,38.8,128Z\" /></svg>\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"block toggles\" style={mobile ? \"display: none\" : \"\"}>\n\t\t\t<label>\n\t\t\t\t<input type=\"checkbox\" bind:checked={icon} />\n\t\t\t\tUse Icons\n\t\t\t</label>\n\t\t\t<label>\n\t\t\t\t<input type=\"checkbox\" bind:checked={locked} on:change={encodeTiers} />\n\t\t\t\tLock\n\t\t\t</label>\n\t\t</div>\n\t</nav>\n\t<div class=\"tierlist\">\n\t\t{#each tiers as tier (tier.id)}\n\t\t\t{#if !locked || hasTier(tier)}\n\t\t\t\t<TierRow {tier} bind:locked {mobile} bind:icon bind:heroData={filteredHeroData} on:moveHero={moveHero} />\n\t\t\t{/if}\n\t\t{/each}\n\t</div>\n</main>\n\n<style>\n\tmain {\n\t\tmargin: 0 auto;\n\t\tposition: relative;\n\t\tbackground: #0e001a;\n\t\tborder-left: 1px solid #143d66;\n\t\tborder-right: 1px solid #143d66;\n\t\tbackground: url(./img/bg.jpg) top center no-repeat #000d1a;\n\t\tmax-width: 2400px;\n\t\tmin-height: 100%;\n\t}\n\n\tnav,\n\t.tierlist {\n\t\tpadding: 0 50px;\n\t}\n\n\tnav {\n\t\tdisplay: flex;\n\t\tjustify-content: left;\n\t\talign-items: center;\n\t\talign-content: stretch;\n\t\tgap: 10px;\n\t\theight: 150px;\n\t\tbackground: url(./img/bggradient.png) repeat-x;\n\t}\n\n\tnav h1 {\n\t\tfont-size: 32px;\n\t\tfont-weight: 700;\n\t\ttext-shadow: 0 2px 4px rgba(0, 0, 0, 0.8);\n\t\tmargin: auto;\n\t\tpadding: 0;\n\t\tpadding-top: 30px;\n\t\tmargin: 0;\n\t}\n\n\tnav h3 {\n\t\ttext-transform: uppercase;\n\t\tfont-size: 10px;\n\t\tpadding: 0;\n\t\tpadding-bottom: 30px;\n\t\tmargin: 0;\n\t\topacity: 0.9;\n\t}\n\n\tnav .search {\n\t\tdisplay: inline-block;\n\t\ttext-align: center;\n\t\twidth: 100%;\n\t\tmargin-bottom: 5px;\n\t}\n\n\tnav input {\n\t\tmargin: 0;\n\t}\n\n\tnav .search input {\n\t\tcolor: #fff;\n\t\tposition: relative;\n\t\tdisplay: inline-block;\n\t\tmin-width: 100%;\n\t\tfont-size: 16px;\n\t\tfont-weight: 700;\n\t\tborder: 1px solid #39f;\n\t\tbackground-color: rgba(0, 26, 51, 1);\n\t\tbox-shadow: 0 0 13px rgba(0, 0, 0, 0.4);\n\t\tpadding: 0.6254em 1.2508em;\n\t\tborder: 2px solid rgba(51, 153, 255, 0.4);\n\t\tbox-shadow: inset 0 0 10px 2px rgba(0, 0, 0, 0.8);\n\t\ttransition: border-color 0.2s, box-shadow 0.2s;\n\t\toutline: none;\n\t}\n\n\tnav .search input:active,\n\tnav .search input:hover {\n\t\tbox-shadow: inset 0 0 10px 2px rgba(0, 128, 255, 0.5);\n\t\tborder-color: rgba(51, 128, 204, 0.8);\n\t}\n\n\t.roles {\n\t\tdisplay: flex;\n\t\talign-content: center;\n\t}\n\n\t.role {\n\t\tflex: 1;\n\t}\n\n\t.role input {\n\t\tdisplay: none;\n\t}\n\n\t.role svg {\n\t\tfill: #9c9c9c;\n\t}\n\n\t.role.active svg,\n\t.role:hover svg {\n\t\tfill: white;\n\t}\n\n\t.tierlist {\n\t\tpadding-bottom: 30px;\n\t}\n\n\t@media (max-width: 1000px) {\n\t\tnav,\n\t\t.tierlist {\n\t\t\tpadding: 0 5px;\n\t\t}\n\n\t\tnav {\n\t\t\tdisplay: block;\n\t\t\theight: auto;\n\t\t}\n\n\t\tnav h1 {\n\t\t\tfont-size: 28px;\n\t\t\ttext-align: center;\n\t\t}\n\n\t\tnav h3 {\n\t\t\ttext-align: center;\n\t\t\tpadding-bottom: 10px;\n\t\t}\n\n\t\tnav .block {\n\t\t\tdisplay: block;\n\t\t}\n\n\t\tnav .filters,\n\t\tnav .toggles {\n\t\t\tmargin-bottom: 5px;\n\t\t}\n\n\t\tnav .filters .roles {\n\t\t\ttext-align: center;\n\t\t}\n\n\t\tnav .toggles {\n\t\t\ttext-align: center;\n\t\t}\n\n\t\tnav .toggles label {\n\t\t\tdisplay: inline-block;\n\t\t\tmargin: 0 5px;\n\t\t}\n\t}\n</style>\n","import App from './App.svelte';\r\nimport HeroData from \"./heroData.json\";\r\nconst app = new App({\r\n    target: document.body,\r\n    props: {\r\n        heroData: HeroData\r\n    }\r\n});\r\nexport default app;\r\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","src_url_equal","element_src","url","document","createElement","href","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","set_style","key","important","style","setProperty","set_current_component","component","get_current_component","Error","createEventDispatcher","type","detail","callbacks","$$","bubbles","e","createEvent","initCustomEvent","custom_event","slice","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","add_flush_callback","seen_callbacks","Set","flushidx","flush","saved_component","length","update","pop","i","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","outro_and_destroy_block","lookup","update_keyed_each","old_blocks","get_key","dynamic","list","destroy","create_each_block","next","get_context","n","old_indexes","new_blocks","new_lookup","Map","deltas","child_ctx","get","set","Math","abs","will_move","did_move","m","first","new_block","old_block","new_key","old_key","bind","index","props","undefined","bound","create_component","mount_component","customElement","on_mount","on_destroy","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","append_styles","parent_component","on_disconnect","context","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","indexOf","splice","$set","$$props","obj","$$set","keys","title","cardPortrait","masked","circleIcon","id","hero","locked","dataTransfer","setData","toString","label","color","allowDrop","preventDefault","tier","mobile","icon","heroData","dispatch","altTier","sort","name1","toUpperCase","name2","role","getData","heroId","Number","parseInt","tierListId","ua","navigator","userAgent","toLowerCase","test","substring","search","roleFilter","tiers","encodeTiers","some","location","hash","buckets","array","Uint8Array","reduce","current","bucket","byteIndex","btoa","String","fromCharCode","apply","atob","split","charCodeAt","version","heroIdToTier","count","j","filteredHeroData","body"],"mappings":"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"}